type Query {
    allProjects: [Project],
    projectById(_id: String!): Project,
    projectByLeader(leader_cc: String!): [Project]
}

type Mutation {
    createProject(input: ProjectInput):Project
    updateProject(_id: ID!, input: ProjectInputUpdate): Project
    deleteProject(_id: ID!): Project
}

scalar Date

type Project {
    _id: ID!
    project_id: String!
    project_name: String!
    general_objectives: String!
    specific_objectives: String!
    budget: Int!
    start_date: Date!
    end_date: Date!
    leader_name: String!
    leader_cc: String!
    project_status: String!
    project_stage: String!
}

input ProjectInput {
    project_id: String!
    project_name: String!
    general_objectives: String!
    specific_objectives: String!
    budget: Int!
    start_date: Date!
    end_date: Date!
    leader_name: String!
    leader_cc: String!
    project_status: String!
    project_stage: String!
}

input ProjectInputUpdate {
    project_id: String
    project_name: String
    general_objectives: String
    specific_objectives: String
    budget: Int
    start_date: Date
    end_date: Date
    leader_name: String
    leader_cc: String
    project_status: String
    project_stage: String
}